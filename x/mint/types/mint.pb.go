// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: archway/mint/v1/mint.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Params defines the module parameters.
type Params struct {
	// min_inflation defines the network's minimum inflation.
	MinInflation github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,1,opt,name=min_inflation,json=minInflation,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"min_inflation"`
	// max_inflation defines the network's maximum inflation.
	MaxInflation github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,2,opt,name=max_inflation,json=maxInflation,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"max_inflation"`
	// min_bonded defines the minimum wanted bond ratio (staked supply/total supply)
	MinBonded github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,3,opt,name=min_bonded,json=minBonded,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"min_bonded"`
	// max_bonded defines the maximum wanted bond ratio (staked supply/total supply)
	MaxBonded github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,4,opt,name=max_bonded,json=maxBonded,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"max_bonded"`
	// inflation_change defines how much the inflation should change if
	// the bond ratio is not between the defined bands of min/max_bonded.
	// This inflation change is applied to each second for which the
	// bond ratio was not between min_bonded and max_bonded.
	InflationChange github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,5,opt,name=inflation_change,json=inflationChange,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"inflation_change"`
	// max_block_duration defines the maximum duration of a block.
	// this is important to have because there can be cases for which
	// a block takes a lot longer than others, for example during upgrades.
	// In these specific cases we don't want to have bursts of inflation
	// in a single block.
	MaxBlockDuration time.Duration `protobuf:"bytes,6,opt,name=max_block_duration,json=maxBlockDuration,proto3,stdduration" json:"max_block_duration"`
	// inflation_recipients defines the list of inflation recipients.
	// CONTRACT: the sum of the ratio of each inflation recipient must be 1.
	InflationRecipients []*Params_InflationRecipient `protobuf:"bytes,7,rep,name=inflation_recipients,json=inflationRecipients,proto3" json:"inflation_recipients,omitempty"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_624f68bf037f2f1e, []int{0}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetMaxBlockDuration() time.Duration {
	if m != nil {
		return m.MaxBlockDuration
	}
	return 0
}

func (m *Params) GetInflationRecipients() []*Params_InflationRecipient {
	if m != nil {
		return m.InflationRecipients
	}
	return nil
}

// InflationRecipient defines the inflation recipients.
type Params_InflationRecipient struct {
	// recipient is the module receiving inflation, eg: x/staking, x/rewards.
	Recipient string `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// ratio is the % of inflation being received.
	Ratio github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,2,opt,name=ratio,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"ratio"`
}

func (m *Params_InflationRecipient) Reset()         { *m = Params_InflationRecipient{} }
func (m *Params_InflationRecipient) String() string { return proto.CompactTextString(m) }
func (*Params_InflationRecipient) ProtoMessage()    {}
func (*Params_InflationRecipient) Descriptor() ([]byte, []int) {
	return fileDescriptor_624f68bf037f2f1e, []int{0, 0}
}
func (m *Params_InflationRecipient) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params_InflationRecipient) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params_InflationRecipient.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params_InflationRecipient) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params_InflationRecipient.Merge(m, src)
}
func (m *Params_InflationRecipient) XXX_Size() int {
	return m.Size()
}
func (m *Params_InflationRecipient) XXX_DiscardUnknown() {
	xxx_messageInfo_Params_InflationRecipient.DiscardUnknown(m)
}

var xxx_messageInfo_Params_InflationRecipient proto.InternalMessageInfo

func (m *Params_InflationRecipient) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

// BlockInfo keeps track of the last block
type LastBlockInfo struct {
	// inflation defines the last block's inflation.
	Inflation github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,1,opt,name=inflation,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"inflation"`
	// time keeps track of the last block time.
	Time *time.Time `protobuf:"bytes,2,opt,name=time,proto3,stdtime" json:"time,omitempty"`
}

func (m *LastBlockInfo) Reset()         { *m = LastBlockInfo{} }
func (m *LastBlockInfo) String() string { return proto.CompactTextString(m) }
func (*LastBlockInfo) ProtoMessage()    {}
func (*LastBlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_624f68bf037f2f1e, []int{1}
}
func (m *LastBlockInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LastBlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LastBlockInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LastBlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastBlockInfo.Merge(m, src)
}
func (m *LastBlockInfo) XXX_Size() int {
	return m.Size()
}
func (m *LastBlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LastBlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LastBlockInfo proto.InternalMessageInfo

func (m *LastBlockInfo) GetTime() *time.Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterType((*Params)(nil), "archway.mint.v1.Params")
	proto.RegisterType((*Params_InflationRecipient)(nil), "archway.mint.v1.Params.InflationRecipient")
	proto.RegisterType((*LastBlockInfo)(nil), "archway.mint.v1.LastBlockInfo")
}

func init() { proto.RegisterFile("archway/mint/v1/mint.proto", fileDescriptor_624f68bf037f2f1e) }

var fileDescriptor_624f68bf037f2f1e = []byte{
	// 475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xc1, 0x6e, 0xd3, 0x30,
	0x18, 0xc7, 0x1b, 0xd6, 0x16, 0xea, 0x32, 0x6d, 0x32, 0x3b, 0x84, 0x08, 0xa5, 0xd5, 0x0e, 0xa8,
	0x42, 0x9a, 0xad, 0x15, 0x9e, 0x20, 0xf4, 0x52, 0x69, 0x48, 0x10, 0xb8, 0x80, 0x84, 0x2a, 0x37,
	0x75, 0x53, 0xab, 0xb5, 0x5d, 0xc5, 0xee, 0x96, 0xbd, 0xc5, 0x24, 0x2e, 0x3c, 0xd2, 0x8e, 0xbb,
	0x81, 0x38, 0x0c, 0xd4, 0xbe, 0x08, 0x8a, 0x13, 0x37, 0x53, 0x7b, 0xcb, 0x4e, 0x8e, 0xfd, 0xfd,
	0xfd, 0xf3, 0xdf, 0xdf, 0xf7, 0x39, 0xc0, 0x23, 0x49, 0x34, 0xbb, 0x22, 0xd7, 0x98, 0x33, 0xa1,
	0xf1, 0xe5, 0xb9, 0x19, 0xd1, 0x32, 0x91, 0x5a, 0xc2, 0xa3, 0x22, 0x86, 0xcc, 0xda, 0xe5, 0xb9,
	0x77, 0x12, 0xcb, 0x58, 0x9a, 0x18, 0xce, 0xbe, 0x72, 0x99, 0xd7, 0x89, 0xa5, 0x8c, 0x17, 0x14,
	0x9b, 0xd9, 0x78, 0x35, 0xc5, 0x9a, 0x71, 0xaa, 0x34, 0xe1, 0xcb, 0x42, 0xe0, 0xef, 0x0a, 0x26,
	0xab, 0x84, 0x68, 0x26, 0x45, 0x1e, 0x3f, 0xfd, 0xd5, 0x00, 0xcd, 0x8f, 0x24, 0x21, 0x5c, 0xc1,
	0xcf, 0xe0, 0x90, 0x33, 0x31, 0x62, 0x62, 0xba, 0x30, 0x0a, 0xd7, 0xe9, 0x3a, 0xbd, 0x56, 0x80,
	0x6e, 0xef, 0x3b, 0xb5, 0x3f, 0xf7, 0x9d, 0xd7, 0x31, 0xd3, 0xb3, 0xd5, 0x18, 0x45, 0x92, 0xe3,
	0x48, 0x2a, 0x2e, 0x55, 0x31, 0x9c, 0xa9, 0xc9, 0x1c, 0xeb, 0xeb, 0x25, 0x55, 0x68, 0x40, 0xa3,
	0xf0, 0x39, 0x67, 0x62, 0x68, 0x19, 0x06, 0x4a, 0xd2, 0x07, 0xd0, 0x27, 0x15, 0xa1, 0x24, 0x2d,
	0xa1, 0x1f, 0x00, 0xc8, 0x9c, 0x8e, 0xa5, 0x98, 0xd0, 0x89, 0x7b, 0x50, 0x89, 0xd8, 0xe2, 0x4c,
	0x04, 0x06, 0x60, 0x70, 0x24, 0xb5, 0xb8, 0x7a, 0x45, 0x1c, 0x49, 0x0b, 0xdc, 0x57, 0x70, 0xbc,
	0xbd, 0xee, 0x28, 0x9a, 0x11, 0x11, 0x53, 0xb7, 0x51, 0x09, 0x7a, 0xb4, 0xe5, 0xbc, 0x37, 0x18,
	0xf8, 0x09, 0x40, 0xe3, 0x74, 0x21, 0xa3, 0xf9, 0xc8, 0x56, 0xd2, 0x6d, 0x76, 0x9d, 0x5e, 0xbb,
	0xff, 0x12, 0xe5, 0xa5, 0x46, 0xb6, 0xd4, 0x68, 0x50, 0x08, 0x82, 0x67, 0xd9, 0xb9, 0x3f, 0xff,
	0x76, 0x9c, 0xf0, 0x38, 0xb3, 0x99, 0xed, 0xb6, 0x31, 0xf8, 0x1d, 0x9c, 0x94, 0x6e, 0x13, 0x1a,
	0xb1, 0x25, 0xa3, 0x42, 0x2b, 0xf7, 0x69, 0xf7, 0xa0, 0xd7, 0xee, 0xbf, 0x41, 0x3b, 0x7d, 0x88,
	0xf2, 0x66, 0x41, 0xdb, 0x62, 0x84, 0x76, 0x4b, 0xf8, 0x82, 0xed, 0xad, 0x29, 0x2f, 0x05, 0x70,
	0x5f, 0x0a, 0x5f, 0x81, 0xd6, 0xf6, 0xa8, 0xbc, 0xcd, 0xc2, 0x72, 0x01, 0x0e, 0x40, 0xc3, 0x98,
	0xab, 0xd8, 0x2b, 0xf9, 0xe6, 0xd3, 0x1f, 0x0e, 0x38, 0xbc, 0x20, 0x4a, 0x9b, 0xeb, 0x0e, 0xc5,
	0x54, 0xc2, 0x0b, 0xd0, 0x7a, 0x6c, 0x73, 0x97, 0x00, 0xf8, 0x0e, 0xd4, 0xb3, 0xc7, 0x66, 0x4c,
	0xb6, 0xfb, 0xde, 0x5e, 0xf6, 0xbf, 0xd8, 0x97, 0x18, 0xd4, 0x6f, 0xb2, 0xd4, 0x1b, 0x75, 0x30,
	0xbc, 0x5d, 0xfb, 0xce, 0xdd, 0xda, 0x77, 0xfe, 0xad, 0x7d, 0xe7, 0x66, 0xe3, 0xd7, 0xee, 0x36,
	0x7e, 0xed, 0xf7, 0xc6, 0xaf, 0x7d, 0xc3, 0x0f, 0x2c, 0x14, 0x49, 0x3f, 0x13, 0x54, 0x5f, 0xc9,
	0x64, 0x6e, 0xe7, 0x38, 0xcd, 0x7f, 0x15, 0xc6, 0xcf, 0xb8, 0x69, 0x8e, 0x7a, 0xfb, 0x3f, 0x00,
	0x00, 0xff, 0xff, 0xc3, 0xc1, 0x53, 0xa9, 0x47, 0x04, 0x00, 0x00,
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InflationRecipients) > 0 {
		for iNdEx := len(m.InflationRecipients) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InflationRecipients[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintMint(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	n1, err1 := github_com_gogo_protobuf_types.StdDurationMarshalTo(m.MaxBlockDuration, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdDuration(m.MaxBlockDuration):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintMint(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x32
	{
		size := m.InflationChange.Size()
		i -= size
		if _, err := m.InflationChange.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size := m.MaxBonded.Size()
		i -= size
		if _, err := m.MaxBonded.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size := m.MinBonded.Size()
		i -= size
		if _, err := m.MinBonded.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size := m.MaxInflation.Size()
		i -= size
		if _, err := m.MaxInflation.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size := m.MinInflation.Size()
		i -= size
		if _, err := m.MinInflation.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Params_InflationRecipient) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params_InflationRecipient) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params_InflationRecipient) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Ratio.Size()
		i -= size
		if _, err := m.Ratio.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintMint(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LastBlockInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LastBlockInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LastBlockInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Time != nil {
		n2, err2 := github_com_gogo_protobuf_types.StdTimeMarshalTo(*m.Time, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(*m.Time):])
		if err2 != nil {
			return 0, err2
		}
		i -= n2
		i = encodeVarintMint(dAtA, i, uint64(n2))
		i--
		dAtA[i] = 0x12
	}
	{
		size := m.Inflation.Size()
		i -= size
		if _, err := m.Inflation.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintMint(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintMint(dAtA []byte, offset int, v uint64) int {
	offset -= sovMint(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.MinInflation.Size()
	n += 1 + l + sovMint(uint64(l))
	l = m.MaxInflation.Size()
	n += 1 + l + sovMint(uint64(l))
	l = m.MinBonded.Size()
	n += 1 + l + sovMint(uint64(l))
	l = m.MaxBonded.Size()
	n += 1 + l + sovMint(uint64(l))
	l = m.InflationChange.Size()
	n += 1 + l + sovMint(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdDuration(m.MaxBlockDuration)
	n += 1 + l + sovMint(uint64(l))
	if len(m.InflationRecipients) > 0 {
		for _, e := range m.InflationRecipients {
			l = e.Size()
			n += 1 + l + sovMint(uint64(l))
		}
	}
	return n
}

func (m *Params_InflationRecipient) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovMint(uint64(l))
	}
	l = m.Ratio.Size()
	n += 1 + l + sovMint(uint64(l))
	return n
}

func (m *LastBlockInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Inflation.Size()
	n += 1 + l + sovMint(uint64(l))
	if m.Time != nil {
		l = github_com_gogo_protobuf_types.SizeOfStdTime(*m.Time)
		n += 1 + l + sovMint(uint64(l))
	}
	return n
}

func sovMint(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMint(x uint64) (n int) {
	return sovMint(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMint
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinInflation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MinInflation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxInflation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MaxInflation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinBonded", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MinBonded.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxBonded", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.MaxBonded.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InflationChange", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InflationChange.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxBlockDuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdDurationUnmarshal(&m.MaxBlockDuration, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InflationRecipients", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InflationRecipients = append(m.InflationRecipients, &Params_InflationRecipient{})
			if err := m.InflationRecipients[len(m.InflationRecipients)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMint(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMint
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Params_InflationRecipient) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMint
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InflationRecipient: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InflationRecipient: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ratio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Ratio.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMint(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMint
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LastBlockInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMint
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LastBlockInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LastBlockInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inflation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Inflation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Time", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMint
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMint
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMint
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Time == nil {
				m.Time = new(time.Time)
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(m.Time, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMint(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMint
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMint(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMint
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMint
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMint
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMint
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMint
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMint
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMint        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMint          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMint = fmt.Errorf("proto: unexpected end of group")
)
